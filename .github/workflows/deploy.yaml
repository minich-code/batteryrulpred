name: Build and Push Docker Image and Deploy to Kubernetes

on:
  push:
    branches:
      - main  # Change to your default branch
  pull_request:
    branches:
      - main  # Change to your default branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: minich/minich-repo:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Save BuildKit cache
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}

# # Deploy to kubernetes 
#   deploy-to-kubernetes:
#     runs-on: ubuntu-latest
#     needs: [build-and-push] # Ensure this job runs after build-and-push
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Set up kubectl
#       uses: azure/setup-kubectl@v1

#     - name: Configure kubectl
#       run: kubectl config set-cluster my-cluster --server=https://<your-kubernetes-cluster-endpoint> # Replace with your cluster endpoint
    
#     - name: Log in to Kubernetes
#       run: kubectl config set-credentials my-user --token=$KUBERNETES_TOKEN # Replace with your Kubernetes token (stored as a secret)
    
#     - name: Set current context
#       run: kubectl config set-context my-context --cluster=my-cluster --user=my-user

#     - name: Apply Kubernetes Manifest
#       run: kubectl apply -f kubernetes